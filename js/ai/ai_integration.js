/**
 * Dot1Xer Supreme - AI Integration
 * Provides AI-powered configuration generation, review, and optimization
 * Version: 3.0.0
 */

// Base URL for the API
const AI_API_BASE_URL = 'https://api.dot1xer.io/ai/';

// API key validation
function validateApiKey(apiKey) {
    if (!apiKey || apiKey.length < 10) {
        return false;
    }
    return true;
}

// Execute AI task with the appropriate provider
async function executeAITask(provider, task, prompt, options = {}) {
    // If using built-in AI, use local processing
    if (provider === 'builtin') {
        return executeBuiltinAI(task, prompt, options);
    }
    
    // Otherwise, use external AI provider
    const apiKey = document.getElementById('api-key').value;
    
    if (!validateApiKey(apiKey)) {
        throw new Error('Invalid API key. Please enter a valid API key for ' + provider);
    }
    
    try {
        const response = await callExternalAI(provider, apiKey, task, prompt, options);
        return response;
    } catch (error) {
        console.error('Error executing AI task:', error);
        throw error;
    }
}

// Call external AI API
async function callExternalAI(provider, apiKey, task, prompt, options) {
    // Prepare API endpoint
    const endpoint = `${AI_API_BASE_URL}${provider.toLowerCase()}/${task}`;
    
    // Prepare payload
    const payload = {
        prompt: prompt,
        options: options
    };
    
    // Prepare headers
    const headers = {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${apiKey}`
    };
    
    // Make API call
    try {
        const response = await fetch(endpoint, {
            method: 'POST',
            headers: headers,
            body: JSON.stringify(payload)
        });
        
        if (!response.ok) {
            throw new Error(`API call failed with status: ${response.status}`);
        }
        
        return await response.json();
    } catch (error) {
        console.error('Error calling external AI:', error);
        throw error;
    }
}

// Execute built-in AI processing
function executeBuiltinAI(task, prompt, options) {
    // This is a placeholder for local AI processing
    // In a real implementation, this would use a local model or rule-based system
    return new Promise((resolve) => {
        setTimeout(() => {
            // Generate response based on task
            let response = '';
            
            switch (task) {
                case 'generate':
                    response = simulateConfigGeneration(prompt, options.detailLevel, options.securityFocus, options.includeComments);
                    break;
                case 'review':
                    response = simulateConfigReview(prompt, options.detailLevel);
                    break;
                case 'optimize':
                    response = simulateConfigOptimization(prompt, options.securityFocus);
                    break;
                case 'explain':
                    response = simulateConfigExplanation(prompt, options.detailLevel);
                    break;
                case 'troubleshoot':
                    response = simulateTroubleshooting(prompt);
                    break;
                case 'convert':
                    response = simulateConfigConversion(prompt);
                    break;
                default:
                    response = "I'm not sure what you want me to do. Please select a task and provide instructions.";
            }
            
            resolve({
                result: response,
                model: 'Dot1Xer AI v3.0',
                timestamp: new Date().toISOString()
            });
        }, 1500);
    });
}

// Helper functions to simulate various AI tasks

function simulateConfigGeneration(prompt, detailLevel, securityFocus, includeComments) {
    // Analyze prompt to determine vendor and requirements
    let vendor = 'cisco';
    let platform = 'ios';
    
    if (prompt.toLowerCase().includes('aruba')) {
        vendor = 'aruba';
        platform = prompt.toLowerCase().includes('cx') ? 'aos-cx' : 'aos-switch';
    } else if (prompt.toLowerCase().includes('juniper')) {
        vendor = 'juniper';
        platform = 'ex-series';
    }
    
    const useVoiceVlan = prompt.toLowerCase().includes('voice') || prompt.toLowerCase().includes('voip');
    const useGuestVlan = prompt.toLowerCase().includes('guest');
    const useCriticalVlan = prompt.toLowerCase().includes('critical');
    const useMab = prompt.toLowerCase().includes('mab') || prompt.toLowerCase().includes('bypass');
    
    // Generate configuration based on detected parameters
    let config = '';
    
    if (vendor === 'cisco') {
        config = `! 802.1X Configuration for Cisco ${platform.toUpperCase()}
! Generated by Dot1Xer Supreme AI
! Security Level: ${securityFocus}

aaa new-model
aaa authentication dot1x default group RADIUS-SERVERS
aaa authorization network default group RADIUS-SERVERS
aaa accounting dot1x default start-stop group RADIUS-SERVERS

radius server PRIMARY
 address ipv4 10.1.1.100 auth-port 1812 acct-port 1813
 key SecureRadiusKey123
 timeout 5
 retransmit 3

radius server BACKUP
 address ipv4 10.1.1.101 auth-port 1812 acct-port 1813
 key SecureRadiusKey456
 timeout 5
 retransmit 3

aaa group server radius RADIUS-SERVERS
 server name PRIMARY
 server name BACKUP
 deadtime 15

dot1x system-auth-control

interface GigabitEthernet1/0/1
 switchport mode access
 switchport access vlan 10
${useVoiceVlan ? ' switchport voice vlan 20' : ''}
 authentication port-control auto
 authentication order dot1x${useMab ? ' mab' : ''}
 authentication priority dot1x${useMab ? ' mab' : ''}
${useGuestVlan ? ' authentication event fail action authorize vlan 30' : ''}
${useCriticalVlan ? ' authentication event server dead action authorize vlan 999\n authentication event server alive action reinitialize' : ''}
 dot1x pae authenticator
 dot1x timeout tx-period 10
 dot1x max-reauth-req 3
 spanning-tree portfast
${useMab ? ' mab' : ''}`;
    } else if (vendor === 'aruba') {
        if (platform === 'aos-cx') {
            config = `! 802.1X Configuration for Aruba AOS-CX
! Generated by Dot1Xer Supreme AI
! Security Level: ${securityFocus}

radius-server host 10.1.1.100 key SecureRadiusKey123
radius-server host 10.1.1.101 key SecureRadiusKey456
radius-server timeout 10
radius-server retransmit 2
radius-server deadtime 15

aaa authentication port-access dot1x authenticator
aaa authentication port-access dot1x authenticator eap-radius
${useMab ? 'aaa authentication port-access mac-auth' : ''}
aaa accounting dot1x start-stop radius

vlan 10 name "DATA_VLAN"
${useVoiceVlan ? 'vlan 20 name "VOICE_VLAN"' : ''}
${useGuestVlan ? 'vlan 30 name "GUEST_VLAN"' : ''}
${useCriticalVlan ? 'vlan 999 name "CRITICAL_VLAN"' : ''}

interface 1/1/1
    no shutdown
    vlan access 10
    ${useVoiceVlan ? 'vlan voice 20' : ''}
    aaa authentication port-access dot1x authenticator
    aaa port-access dot1x authenticator
    ${useMab ? 'aaa authentication port-access mac-auth\n    aaa port-access mac-auth' : ''}
    ${useGuestVlan ? 'aaa port-access auth-fail-vlan 30' : ''}
    ${useCriticalVlan ? 'aaa port-access server-fail-vlan 999' : ''}
    spanning-tree port-type admin-edge`;
        } else {
            config = `! 802.1X Configuration for Aruba AOS-Switch
! Generated by Dot1Xer Supreme AI
! Security Level: ${securityFocus}

radius-server host 10.1.1.100 key SecureRadiusKey123
radius-server host 10.1.1.101 key SecureRadiusKey456
radius-server timeout 10
radius-server retransmit 2

aaa authentication port-access eap-radius
${useMab ? 'aaa authentication port-access mac-auth' : ''}
aaa accounting dot1x start-stop radius

vlan 10 name "DATA_VLAN"
${useVoiceVlan ? 'vlan 20 name "VOICE_VLAN"' : ''}
${useGuestVlan ? 'vlan 30 name "GUEST_VLAN"' : ''}
${useCriticalVlan ? 'vlan 999 name "CRITICAL_VLAN"' : ''}

interface 1
    aaa port-access authenticator
    aaa port-access authenticator active
    ${useMab ? 'aaa port-access mac-auth' : ''}
    vlan-id 10
    ${useVoiceVlan ? 'voice-vlan 20' : ''}
    ${useGuestVlan ? 'aaa port-access authenticator unauth-vid 30' : ''}
    ${useCriticalVlan ? 'aaa port-access authenticator server-timeout-vlan 999' : ''}
    spanning-tree admin-edge-port`;
        }
    } else if (vendor === 'juniper') {
        config = `# 802.1X Configuration for Juniper ${platform}
# Generated by Dot1Xer Supreme AI
# Security Level: ${securityFocus}

set access radius-server 10.1.1.100 secret "SecureRadiusKey123"
set access radius-server 10.1.1.100 timeout 10
set access radius-server 10.1.1.100 retry 3
set access radius-server 10.1.1.100 source-address <SWITCH_IP>

set access radius-server 10.1.1.101 secret "SecureRadiusKey456"
set access radius-server 10.1.1.101 timeout 10
set access radius-server 10.1.1.101 retry 3
set access radius-server 10.1.1.101 source-address <SWITCH_IP>

set access profile DOT1X-PROFILE authentication-order radius
set access profile DOT1X-PROFILE radius authentication-server 10.1.1.100
set access profile DOT1X-PROFILE radius authentication-server 10.1.1.101
set access profile DOT1X-PROFILE radius accounting-server 10.1.1.100
set access profile DOT1X-PROFILE radius accounting-server 10.1.1.101

set vlans DATA_VLAN vlan-id 10
${useVoiceVlan ? 'set vlans VOICE_VLAN vlan-id 20' : ''}
${useGuestVlan ? 'set vlans GUEST_VLAN vlan-id 30' : ''}
${useCriticalVlan ? 'set vlans CRITICAL_VLAN vlan-id 999' : ''}

set protocols dot1x authenticator authentication-profile-name DOT1X-PROFILE
set protocols dot1x authenticator interface ge-0/0/1.0
${useMab ? 'set protocols dot1x authenticator interface ge-0/0/1.0 mac-radius' : ''}
set protocols dot1x authenticator interface ge-0/0/1.0 supplicant multiple

${useGuestVlan ? 'set protocols dot1x authenticator interface ge-0/0/1.0 guest-vlan GUEST_VLAN' : ''}
${useCriticalVlan ? 'set protocols dot1x authenticator interface ge-0/0/1.0 server-fail vlan-name CRITICAL_VLAN' : ''}`;
    }
    
    // Create HTML response
    let html = `
        <h3>Generated Configuration</h3>
        <p>Based on your requirements, here's a configuration for ${vendor.charAt(0).toUpperCase() + vendor.slice(1)} ${platform}:</p>
        <pre>${config}</pre>
    `;
    
    if (includeComments) {
        html += `
            <h3>Configuration Notes</h3>
            <ul>
                <li>This configuration implements 802.1X${useMab ? ' with MAB fallback' : ' authentication'}</li>
                <li>VLAN 10 is assigned to authenticated users</li>
                ${useVoiceVlan ? '<li>VLAN 20 is configured as the voice VLAN</li>' : ''}
                ${useGuestVlan ? '<li>VLAN 30 is the guest VLAN for failed authentications</li>' : ''}
                ${useCriticalVlan ? '<li>VLAN 999 is the critical VLAN for when RADIUS servers are unreachable</li>' : ''}
                <li>Primary and backup RADIUS servers are configured with appropriate timeout and retry settings</li>
            </ul>
        `;
    }
    
    html += `<p>You can customize this configuration further to meet your specific requirements.</p>`;
    
    return html;
}

function simulateConfigReview(config, detailLevel) {
    // Simple parsing of the config to find potential issues
    const issues = [];
    const recommendations = [];
    
    // Check for weak RADIUS keys
    if (config.includes('key cisco') || config.includes('key password') || config.includes('key radius')) {
        issues.push('<strong>High Severity:</strong> Weak RADIUS key detected. Consider using a stronger shared secret.');
    }
    
    // Check for missing RADIUS server deadtime
    if (!config.includes('deadtime')) {
        issues.push('<strong>Medium Severity:</strong> Missing RADIUS server deadtime configuration, which may cause delays during server failure.');
    }
    
    // Check for periodic reauthentication
    if (!config.includes('reauthenticate')) {
        issues.push('<strong>Medium Severity:</strong> No periodic reauthentication configured, which is recommended for better security.');
        recommendations.push('Configure authentication timer reauthenticate to periodically verify users.');
    }
    
    // Check for RADIUS timeout
    if (config.includes('timeout 5') || config.includes('timeout 3')) {
        recommendations.push('Consider increasing the RADIUS timeout from 5 to 10 seconds to account for network latency.');
    }
    
    // Check for server alive action
    if (!config.includes('server alive')) {
        recommendations.push('Add authentication event server alive action to reinitialize when servers come back online.');
    }
    
    // Check for max-reauth-req
    if (!config.includes('max-reauth-req')) {
        recommendations.push('Configure dot1x max-reauth-req to reduce reauthentication failures.');
    }
    
    // Check for accounting
    if (!config.includes('accounting')) {
        recommendations.push('Implement RADIUS accounting for better auditing and troubleshooting.');
    }
    
    // Check for CoA
    if (!config.includes('dynamic-author') && !config.includes('change-of-authorization')) {
        recommendations.push('Consider enabling Change of Authorization (CoA) support.');
    }
    
    // Check for spanning-tree portfast
    if (!config.includes('portfast') && !config.includes('edge-port')) {
        recommendations.push('Add spanning-tree portfast to interfaces to improve client connectivity experience.');
    }
    
    // Create response HTML
    let html = `
        <h3>Configuration Review</h3>
        
        <h4>Overview</h4>
        <p>I've analyzed the provided configuration and found some potential issues and recommendations:</p>
    `;
    
    if (issues.length > 0) {
        html += `
            <h4>Security Issues</h4>
            <ul>
                ${issues.map(issue => `<li>${issue}</li>`).join('\n')}
            </ul>
        `;
    }
    
    if (recommendations.length > 0) {
        html += `
            <h4>Optimization Opportunities</h4>
            <ul>
                ${recommendations.map(rec => `<li>${rec}</li>`).join('\n')}
            </ul>
        `;
    }
    
    html += `
        <h4>Best Practices</h4>
        <ul>
            <li>Implement RADIUS accounting for better auditing and troubleshooting.</li>
            <li>Consider enabling Change of Authorization (CoA) support.</li>
            <li>Add spanning-tree portfast to interfaces to improve client connectivity experience.</li>
        </ul>
        
        <p>Overall, this configuration provides basic 802.1X functionality, but has several security improvements to consider implementing.</p>
    `;
    
    return html;
}

function simulateConfigOptimization(config, securityFocus) {
    // Determine vendor from the config
    let vendor = 'cisco';
    
    if (config.includes('radius-server host') && config.includes('aaa port-access')) {
        vendor = 'aruba';
    } else if (config.includes('set access radius-server')) {
        vendor = 'juniper';
    }
    
    // Generate optimized configuration based on vendor
    let optimizedConfig = '';
    
    if (vendor === 'cisco') {
        optimizedConfig = `! Optimized 802.1X Configuration
! Generated by Dot1Xer Supreme AI
! Security Focus: ${securityFocus}

aaa new-model
aaa authentication dot1x default group RADIUS-SERVERS
aaa authorization network default group RADIUS-SERVERS
aaa accounting dot1x default start-stop group RADIUS-SERVERS

radius server PRIMARY
 address ipv4 10.1.1.100 auth-port 1812 acct-port 1813
 key Str0ngR@diusK3y!987
 timeout 10
 retransmit 2

radius server BACKUP
 address ipv4 10.1.1.101 auth-port 1812 acct-port 1813
 key Str0ngB@ckupK3y!456
 timeout 10
 retransmit 2

aaa group server radius RADIUS-SERVERS
 server name PRIMARY
 server name BACKUP
 deadtime 15

! Enable CoA support
aaa server radius dynamic-author
 client 10.1.1.100 server-key Str0ngR@diusK3y!987
 client 10.1.1.101 server-key Str0ngB@ckupK3y!456
 auth-type any
 port 3799

dot1x system-auth-control

! Global 802.1X settings
dot1x critical eapol
dot1x logging verbose

interface GigabitEthernet1/0/1
 switchport mode access
 switchport access vlan 10
 switchport voice vlan 20
 switchport nonegotiate
 authentication control-direction in
 authentication event fail action authorize vlan 30
 authentication event server dead action authorize vlan 999
 authentication event server alive action reinitialize
 authentication host-mode multi-auth
 authentication open
 authentication order dot1x mab
 authentication priority dot1x mab
 authentication port-control auto
 authentication periodic
 authentication timer reauthenticate 7200
 authentication timer restart 10
 authentication violation restrict
 mab
 dot1x pae authenticator
 dot1x timeout tx-period 10
 dot1x max-reauth-req 3
 spanning-tree portfast
 spanning-tree bpduguard enable`;
    } else if (vendor === 'aruba') {
        optimizedConfig = `! Optimized 802.1X Configuration for Aruba
! Generated by Dot1Xer Supreme AI
! Security Focus: ${securityFocus}

radius-server host 10.1.1.100 key Str0ngR@diusK3y!987
radius-server host 10.1.1.101 key Str0ngB@ckupK3y!456
radius-server timeout 10
radius-server retransmit 2
radius-server deadtime 15

aaa authentication port-access dot1x authenticator
aaa authentication port-access dot1x authenticator eap-radius
aaa authentication port-access mac-auth
aaa accounting dot1x start-stop radius

aaa authentication captive-portal profile "Guest-Portal"
   default-role auth-guest
   server-group RADIUS-SERVERS
   redirect-pause 3

vlan 10 name "DATA_VLAN"
vlan 20 name "VOICE_VLAN"
vlan 30 name "GUEST_VLAN"
vlan 999 name "CRITICAL_VLAN"

interface 1/1/1
    no shutdown
    vlan access 10
    vlan voice 20
    aaa authentication port-access dot1x authenticator
    aaa authentication port-access mac-auth
    aaa port-access auth-fail-vlan 30
    aaa port-access server-fail-vlan 999
    spanning-tree port-type admin-edge`;
    } else if (vendor === 'juniper') {
        optimizedConfig = `# Optimized 802.1X Configuration for Juniper
# Generated by Dot1Xer Supreme AI
# Security Focus: ${securityFocus}

set access radius-server 10.1.1.100 secret "Str0ngR@diusK3y!987"
set access radius-server 10.1.1.100 timeout 10
set access radius-server 10.1.1.100 retry 2
set access radius-server 10.1.1.100 source-address <SWITCH_IP>

set access radius-server 10.1.1.101 secret "Str0ngB@ckupK3y!456"
set access radius-server 10.1.1.101 timeout 10
set access radius-server 10.1.1.101 retry 2
set access radius-server 10.1.1.101 source-address <SWITCH_IP>

set access profile DOT1X-PROFILE authentication-order radius
set access profile DOT1X-PROFILE radius authentication-server 10.1.1.100
set access profile DOT1X-PROFILE radius authentication-server 10.1.1.101
set access profile DOT1X-PROFILE radius accounting-server 10.1.1.100
set access profile DOT1X-PROFILE radius accounting-server 10.1.1.101
set access profile DOT1X-PROFILE radius options change-of-authorization

set vlans DATA_VLAN vlan-id 10
set vlans VOICE_VLAN vlan-id 20
set vlans GUEST_VLAN vlan-id 30
set vlans CRITICAL_VLAN vlan-id 999

set protocols dot1x authenticator authentication-profile-name DOT1X-PROFILE
set protocols dot1x authenticator interface ge-0/0/1.0
set protocols dot1x authenticator interface ge-0/0/1.0 mac-radius
set protocols dot1x authenticator interface ge-0/0/1.0 supplicant multiple
set protocols dot1x authenticator interface ge-0/0/1.0 guest-vlan GUEST_VLAN
set protocols dot1x authenticator interface ge-0/0/1.0 server-fail vlan-name CRITICAL_VLAN
set protocols dot1x authenticator interface ge-0/0/1.0 server-reject-vlan GUEST_VLAN
set protocols dot1x authenticator interface ge-0/0/1.0 reauthentication 7200
set protocols dot1x authenticator interface ge-0/0/1.0 supplicant-timeout 10
set protocols dot1x authenticator interface ge-0/0/1.0 quiet-period 3
set protocols dot1x authenticator interface ge-0/0/1.0 transmit-period 5
set protocols dot1x authenticator interface ge-0/0/1.0 max-reauth-requests 3
set protocols dot1x authenticator interface ge-0/0/1.0 no-reauthentication-while-authenticated`;
    }
    
    // Create optimizations list based on security focus
    let optimizations = [];
    
    // Common optimizations
    optimizations.push('Strengthened RADIUS keys with complex passwords');
    optimizations.push('Optimized timeouts and retransmit values for better reliability');
    optimizations.push('Added authentication timer reauthenticate to periodically verify users');
    
    // Security focus-specific optimizations
    if (securityFocus === 'security') {
        optimizations.push('Enabled BPDUGuard for better security on access ports');
        optimizations.push('Implemented more strict violation mode');
        optimizations.push('Added CoA support for dynamic policy enforcement');
    } else if (securityFocus === 'usability') {
        optimizations.push('Configured authentication violation mode to restrict (rather than shutting down ports)');
        optimizations.push('Implemented guest access for authentication failures');
        optimizations.push('Extended timeouts for better user experience');
    } else if (securityFocus === 'reliability') {
        optimizations.push('Added server-fail VLAN for when RADIUS servers are unreachable');
        optimizations.push('Implemented server alive action to reinitialize when servers recover');
        optimizations.push('Configured appropriate deadtime to prevent repeated attempts to unavailable servers');
    }
    
    // Create HTML response
    let html = `
        <h3>Optimized Configuration</h3>
        
        <p>I've optimized your configuration with a focus on <strong>${securityFocus}</strong>. Here's the improved version:</p>
        
        <pre>${optimizedConfig}</pre>
        
        <h4>Key Optimizations</h4>
        <ul>
            ${optimizations.map(opt => `<li>${opt}</li>`).join('\n')}
        </ul>
        
        <p>These changes significantly improve the ${securityFocus} of your 802.1X deployment.</p>
    `;
    
    return html;
}

function simulateConfigExplanation(config, detailLevel) {
    // Basic detection of configuration type
    let vendor = 'Unknown';
    let isRadsec = false;
    let isMab = false;
    let isCoA = false;
    
    if (config.includes('aaa new-model')) {
        vendor = 'Cisco';
    } else if (config.includes('radius-server host') && config.includes('aaa port-access')) {
        vendor = 'Aruba';
    } else if (config.includes('set access radius-server')) {
        vendor = 'Juniper';
    }
    
    if (config.includes('mab') || config.includes('mac-auth') || config.includes('mac-radius')) {
        isMab = true;
    }
    
    if (config.includes('dynamic-author') || config.includes('change-of-authorization')) {
        isCoA = true;
    }
    
    if (config.includes('radsec') || config.includes('tls')) {
        isRadsec = true;
    }
    
    // Generate explanation based on detail level
    let html = '';
    
    if (detailLevel === 'basic') {
        html = `
            <h3>Configuration Explanation</h3>
            
            <p>This is a basic 802.1X configuration for a ${vendor} device. It sets up authentication against RADIUS servers and configures ports to require authentication before allowing network access. ${isMab ? 'The configuration includes MAC Authentication Bypass (MAB) as a fallback method for devices that don\'t support 802.1X.' : ''} ${isCoA ? 'It also supports Change of Authorization (CoA) to dynamically change user permissions.' : ''} ${isRadsec ? 'This configuration uses RadSec for secure RADIUS communication over TLS.' : ''}</p>
            
            <p>The main components of this configuration are:</p>
            <ul>
                <li>RADIUS server settings for authentication</li>
                <li>802.1X global configuration</li>
                <li>Interface-specific authentication settings</li>
                ${isMab ? '<li>MAC Authentication Bypass configuration</li>' : ''}
                ${isCoA ? '<li>Change of Authorization (CoA) support</li>' : ''}
                ${isRadsec ? '<li>RadSec secure RADIUS communication</li>' : ''}
            </ul>
        `;
    } else if (detailLevel === 'expert') {
        // Generate vendor-specific expert explanation
        if (vendor === 'Cisco') {
            html = `
                <h3>Configuration Explanation (Expert Level)</h3>
                
                <h4>AAA Configuration (Authentication, Authorization, Accounting)</h4>
                <p>The <code>aaa new-model</code> command enables the AAA access control system. This is required for 802.1X authentication. The following lines configure the authentication method lists:</p>
                <ul>
                    <li><code>aaa authentication dot1x default group RADIUS-SERVERS</code> - Specifies that 802.1X authentication should use the RADIUS-SERVERS group as the default method.</li>
                    <li><code>aaa authorization network default group RADIUS-SERVERS</code> - Configures the switch to use RADIUS for network authorization, which includes VLAN assignments and ACLs.</li>
                    <li><code>aaa accounting dot1x default start-stop group RADIUS-SERVERS</code> - Enables accounting records to be sent to the RADIUS servers when sessions start and stop.</li>
                </ul>
                
                <h4>RADIUS Server Configuration</h4>
                <p>The configuration defines RADIUS servers for authentication with these parameters:</p>
                <ul>
                    <li><code>address ipv4</code> - The IP address of the RADIUS server</li>
                    <li><code>auth-port</code> - UDP port used for authentication (typically 1812)</li>
                    <li><code>acct-port</code> - UDP port used for accounting (typically 1813)</li>
                    <li><code>key</code> - The shared secret used to secure communication between the switch and RADIUS server</li>
                    <li><code>timeout</code> - How long to wait for a response before trying again or failing over to another server</li>
                    <li><code>retransmit</code> - How many times to retry sending a request before giving up</li>
                </ul>
                
                <h4>RADIUS Server Group</h4>
                <p>The <code>aaa group server radius RADIUS-SERVERS</code> section creates a server group that includes the defined RADIUS servers. The <code>deadtime</code> setting means that if a server is unresponsive, it will be marked as "dead" for the specified minutes before the switch tries it again.</p>
                
                <h4>Interface Configuration</h4>
                <p>The interface configuration shows a sophisticated 802.1X implementation:</p>
                <ul>
                    <li><code>authentication order dot1x mab</code> - The switch will try 802.1X first, then fall back to MAC Authentication Bypass</li>
                    <li><code>authentication priority dot1x mab</code> - Defines which authentication method takes precedence if multiple succeed</li>
                    <li><code>authentication event fail action authorize vlan</code> - If authentication fails, place the device in the specified VLAN</li>
                    <li><code>authentication event server dead action authorize vlan</code> - If RADIUS servers are unreachable, place the device in the specified VLAN</li>
                </ul>
                
                <h4>Additional 802.1X Parameters</h4>
                <p>The configuration includes other important 802.1X parameters:</p>
                <ul>
                    <li><code>dot1x timeout tx-period</code> - The interval in seconds between retransmissions of EAP requests to the client</li>
                    <li><code>dot1x max-reauth-req</code> - The maximum number of times the switch will retransmit an EAP-Request/Identity frame before restarting the authentication process</li>
                    <li><code>authentication timer reauthenticate</code> - How often to re-authenticate clients in seconds</li>
                </ul>
                
                ${isCoA ? `<h4>Change of Authorization (CoA)</h4>
                <p>The <code>aaa server radius dynamic-author</code> section configures the switch to accept CoA requests from RADIUS servers. This allows for dynamic policy changes without requiring the client to reauthenticate.</p>` : ''}
                
                ${isRadsec ? `<h4>RadSec Configuration</h4>
                <p>The configuration includes RadSec for secure RADIUS communication using TLS. This provides stronger security than standard RADIUS by encrypting the entire RADIUS packet rather than just the password attribute.</p>` : ''}
            `;
        } else if (vendor === 'Aruba') {
            html = `
                <h3>Configuration Explanation (Expert Level)</h3>
                
                <h4>RADIUS Configuration</h4>
                <p>The configuration defines RADIUS servers with parameters including server address, shared secret, timeout, and retransmit values.</p>
                
                <h4>AAA Authentication</h4>
                <p>The <code>aaa authentication port-access</code> commands configure the authentication methods:</p>
                <ul>
                    <li><code>aaa authentication port-access dot1x authenticator</code> - Enables 802.1X authentication</li>
                    <li><code>aaa authentication port-access dot1x authenticator eap-radius</code> - Specifies that EAP packets should be forwarded to the RADIUS server</li>
                    ${isMab ? '<li><code>aaa authentication port-access mac-auth</code> - Enables MAC Authentication Bypass</li>' : ''}
                </ul>
                
                <h4>Interface Configuration</h4>
                <p>The interface configuration applies the authentication policies to specific ports:</p>
                <ul>
                    <li><code>aaa port-access dot1x authenticator</code> - Enables 802.1X on the interface</li>
                    ${isMab ? '<li><code>aaa port-access mac-auth</code> - Enables MAC Authentication on the interface</li>' : ''}
                    <li><code>aaa port-access auth-fail-vlan</code> - Specifies the VLAN to use when authentication fails</li>
                    <li><code>aaa port-access server-fail-vlan</code> - Specifies the VLAN to use when RADIUS servers are unreachable</li>
                </ul>
                
                <h4>VLAN Configuration</h4>
                <p>The configuration defines VLANs for different authentication states, with descriptive names for clarity.</p>
                
                ${isCoA ? `<h4>Change of Authorization (CoA)</h4>
                <p>The configuration includes support for CoA, allowing for dynamic policy changes initiated by the RADIUS server.</p>` : ''}
            `;
        } else if (vendor === 'Juniper') {
            html = `
                <h3>Configuration Explanation (Expert Level)</h3>
                
                <h4>RADIUS Server Configuration</h4>
                <p>The <code>set access radius-server</code> commands define the RADIUS servers with parameters including:</p>
                <ul>
                    <li>Server address</li>
                    <li>Shared secret</li>
                    <li>Timeout and retry values</li>
                    <li>Source address for RADIUS packets</li>
                </ul>
                
                <h4>Access Profile Configuration</h4>
                <p>The <code>set access profile</code> commands define authentication and authorization policies:</p>
                <ul>
                    <li><code>set access profile DOT1X-PROFILE authentication-order radius</code> - Specifies that RADIUS should be used for authentication</li>
                    <li><code>set access profile DOT1X-PROFILE radius authentication-server</code> - Associates RADIUS servers with the profile</li>
                    <li><code>set access profile DOT1X-PROFILE radius accounting-server</code> - Configures RADIUS accounting</li>
                </ul>
                
                <h4>802.1X Protocol Configuration</h4>
                <p>The <code>set protocols dot1x</code> commands configure the 802.1X authenticator functionality:</p>
                <ul>
                    <li><code>set protocols dot1x authenticator authentication-profile-name</code> - Associates the access profile with 802.1X</li>
                    <li><code>set protocols dot1x authenticator interface</code> - Enables 802.1X on specific interfaces</li>
                    ${isMab ? '<li><code>set protocols dot1x authenticator interface mac-radius</code> - Enables MAC Authentication Bypass</li>' : ''}
                    <li><code>set protocols dot1x authenticator interface supplicant multiple</code> - Allows multiple clients on the same port</li>
                    <li><code>set protocols dot1x authenticator interface guest-vlan</code> - Configures the guest VLAN for failed authentication</li>
                    <li><code>set protocols dot1x authenticator interface server-fail vlan-name</code> - Configures the VLAN to use when RADIUS servers are unreachable</li>
                </ul>
                
                <h4>Reauthentication Settings</h4>
                <p>The configuration includes reauthentication parameters to periodically verify client authentication.</p>
                
                ${isCoA ? `<h4>Change of Authorization (CoA)</h4>
                <p>The <code>set access profile DOT1X-PROFILE radius options change-of-authorization</code> command enables support for CoA, allowing for dynamic policy changes without requiring clients to reauthenticate.</p>` : ''}
            `;
        } else {
            html = `
                <h3>Configuration Explanation (Expert Level)</h3>
                
                <p>This configuration contains settings for 802.1X authentication on a network device. The expert-level analysis would typically include detailed explanations of RADIUS server configuration, AAA settings, interface-specific authentication parameters, and other specialized features.</p>
                
                <p>However, this configuration appears to be from a vendor that I don't have expert-level knowledge about. The basic components are present, including RADIUS server configuration, authentication settings, and interface configuration, but the exact syntax and implications would require vendor-specific expertise.</p>
            `;
        }
    } else {
        // Intermediate level explanation
        html = `
            <h3>Configuration Explanation</h3>
            
            <h4>Authentication Configuration</h4>
            <p>This configuration implements 802.1X port-based authentication ${isMab ? 'with MAC Authentication Bypass (MAB) as a fallback method' : ''}. The key components are:</p>
            
            <h5>RADIUS Server Setup</h5>
            <p>RADIUS servers are configured to handle authentication requests from network devices. These servers validate user credentials and return authorization information.</p>
            
            <h5>VLAN Configuration</h5>
            <p>The configuration uses several VLANs for different authentication states:</p>
            <ul>
                <li>Data VLAN: For successfully authenticated devices</li>
                <li>Voice VLAN: Specifically for VoIP devices</li>
                <li>Guest VLAN: For devices that fail authentication</li>
                <li>Critical VLAN: Used when RADIUS servers are unreachable</li>
            </ul>
            
            <h5>Authentication Process</h5>
            <p>When a device connects to a configured port:</p>
            <ol>
                <li>The switch attempts 802.1X authentication ${isMab ? 'first' : ''}</li>
                ${isMab ? '<li>If 802.1X fails, it falls back to MAC Authentication Bypass</li>' : ''}
                <li>If authentication succeeds, the device is placed in the data VLAN</li>
                <li>If authentication fails, the device is placed in the guest VLAN</li>
                <li>If RADIUS servers are unreachable, the device is placed in the critical VLAN</li>
            </ol>
            
            ${isCoA ? `<h5>Dynamic Policy Changes</h5>
            <p>This configuration supports Change of Authorization (CoA), which allows the RADIUS server to dynamically change a user's authorization attributes (like VLAN assignment) without requiring reauthentication.</p>` : ''}
            
            ${isRadsec ? `<h5>Secure RADIUS Communication</h5>
            <p>The configuration uses RadSec to secure RADIUS communication with TLS encryption, providing better security than standard RADIUS.</p>` : ''}
        `;
    }
    
    return html;
}

function simulateTroubleshooting(problem) {
    // Parse problem description to determine issue type
    const problemLower = problem.toLowerCase();
    
    let issueType = 'general';
    
    if (problemLower.includes('authentication fail') || problemLower.includes('can\'t authenticate') || problemLower.includes('not authenticating')) {
        issueType = 'auth-failure';
    } else if (problemLower.includes('vlan') || problemLower.includes('wrong network') || problemLower.includes('incorrect access')) {
        issueType = 'vlan-assignment';
    } else if (problemLower.includes('timeout') || problemLower.includes('slow') || problemLower.includes('delay')) {
        issueType = 'timeout';
    } else if (problemLower.includes('disconnect') || problemLower.includes('intermittent') || problemLower.includes('drops')) {
        issueType = 'intermittent';
    } else if (problemLower.includes('radius') || problemLower.includes('server')) {
        issueType = 'radius-server';
    }
    
    // Generate troubleshooting response based on issue type
    let diagnosticSteps = '';
    let possibleCauses = '';
    let recommendedSolutions = '';
    
    if (issueType === 'auth-failure') {
        possibleCauses = `
            <li><strong>Supplicant Configuration Issues</strong>
                <ul>
                    <li>Incorrect EAP method configuration on client</li>
                    <li>Certificate validation issues on client</li>
                    <li>Outdated supplicant software</li>
                </ul>
            </li>
            <li><strong>Network Infrastructure Problems</strong>
                <ul>
                    <li>Switch port configuration mismatch</li>
                    <li>RADIUS server reachability issues</li>
                </ul>
            </li>
            <li><strong>Authentication Server Issues</strong>
                <ul>
                    <li>RADIUS server misconfiguration</li>
                    <li>User account or password problems</li>
                    <li>Certificate issues on RADIUS server</li>
                </ul>
            </li>
        `;
        
        diagnosticSteps = `
            <li><strong>Verify Switch Configuration</strong>
                <pre>show authentication sessions interface GigabitEthernet1/0/1
show dot1x all
show aaa servers</pre>
                <p>Check that the port is configured correctly for 802.1X and that RADIUS servers are reachable.</p>
            </li>
            <li><strong>Check RADIUS Server Logs</strong>
                <p>Look for authentication failures in the RADIUS server logs. Common error codes include:</p>
                <ul>
                    <li>Access-Reject (Authentication failure)</li>
                    <li>Timeout (Server not responding)</li>
                    <li>MPPE-Send/Recv-Key missing (Encryption key negotiation failed)</li>
                </ul>
            </li>
            <li><strong>Examine Client Logs</strong>
                <p>On Windows, check the Event Viewer > Windows Logs > System for 802.1X related events.</p>
                <p>On macOS, use the Console app to view system logs for EAP/802.1X events.</p>
            </li>
            <li><strong>Packet Capture</strong>
                <p>Capture EAP packets between the client and switch to identify where the authentication process is failing.</p>
            </li>
        `;
        
        recommendedSolutions = `
            <li><strong>Enable Monitor Mode</strong>
                <pre>interface GigabitEthernet1/0/1
 authentication open</pre>
                <p>This allows traffic while logging authentication attempts, helping identify issues without blocking users.</p>
            </li>
            <li><strong>Configure Debug Logging</strong>
                <pre>debug dot1x all
debug radius authentication
debug aaa authentication</pre>
                <p>These commands provide detailed debugging information for 802.1X authentication.</p>
            </li>
            <li><strong>Test with Known Good Device</strong>
                <p>Configure a test port and authenticate with a device known to have correct supplicant settings.</p>
            </li>
            <li><strong>Implement MAC Authentication Bypass</strong>
                <pre>interface GigabitEthernet1/0/1
 authentication order dot1x mab
 authentication priority dot1x mab
 mab</pre>
                <p>This allows devices without 802.1X supplicants to authenticate based on MAC address.</p>
            </li>
        `;
    } else if (issueType === 'vlan-assignment') {
        possibleCauses = `
            <li><strong>RADIUS Server Attribute Issues</strong>
                <ul>
                    <li>Incorrect RADIUS attributes in user/device profile</li>
                    <li>Missing Tunnel-Type, Tunnel-Medium-Type, or Tunnel-Private-Group-ID attributes</li>
                    <li>Syntax errors in attribute values</li>
                </ul>
            </li>
            <li><strong>Switch Configuration Problems</strong>
                <ul>
                    <li>VLAN doesn't exist on the switch</li>
                    <li>VLAN interface is down or has issues</li>
                    <li>Authorization policy misconfiguration</li>
                </ul>
            </li>
            <li><strong>Multiple Authentications Conflict</strong>
                <ul>
                    <li>Conflicts between 802.1X and MAB VLAN assignments</li>
                    <li>Voice VLAN vs. data VLAN conflicts</li>
                </ul>
            </li>
        `;
        
        diagnosticSteps = `
            <li><strong>Verify RADIUS Attributes</strong>
                <p>Check that the RADIUS server is sending the correct VLAN attributes:</p>
                <ul>
                    <li>Tunnel-Type (64) = VLAN (13)</li>
                    <li>Tunnel-Medium-Type (65) = 802 (6)</li>
                    <li>Tunnel-Private-Group-ID (81) = VLAN ID</li>
                </ul>
            </li>
            <li><strong>Check Switch VLAN Configuration</strong>
                <pre>show vlan brief
show interface vlan [vlan-id]</pre>
                <p>Verify that the VLAN exists on the switch and is operational.</p>
            </li>
            <li><strong>Examine Authentication Session</strong>
                <pre>show authentication sessions interface [interface]
show authentication sessions interface [interface] details</pre>
                <p>Check the current authorization status and assigned VLAN.</p>
            </li>
            <li><strong>Check RADIUS Debug Output</strong>
                <pre>debug radius authentication</pre>
                <p>Look for VLAN assignment attributes in the RADIUS responses.</p>
            </li>
        `;
        
        recommendedSolutions = `
            <li><strong>Fix RADIUS Attributes</strong>
                <p>Ensure the RADIUS server is sending the correct VLAN attributes in the proper format.</p>
            </li>
            <li><strong>Configure Static VLAN Assignment</strong>
                <pre>interface GigabitEthernet1/0/1
 switchport access vlan [vlan-id]</pre>
                <p>As a temporary measure, you can statically assign the VLAN on the port.</p>
            </li>
            <li><strong>Configure VLAN Assignment Priority</strong>
                <p>For devices that support it, configure which authentication method's VLAN assignment takes priority.</p>
            </li>
            <li><strong>Verify VLAN Exists and is Active</strong>
                <pre>vlan [vlan-id]
 name [vlan-name]</pre>
                <p>Ensure the VLAN is properly configured on the switch.</p>
            </li>
        `;
    } else if (issueType === 'timeout') {
        possibleCauses = `
            <li><strong>RADIUS Server Response Delays</strong>
                <ul>
                    <li>RADIUS server overload</li>
                    <li>Network latency between switch and RADIUS server</li>
                    <li>RADIUS server processing delays</li>
                </ul>
            </li>
            <li><strong>Supplicant Configuration Issues</strong>
                <ul>
                    <li>Slow EAP method (like TLS with large certificates)</li>
                    <li>Supplicant retry settings too aggressive</li>
                </ul>
            </li>
            <li><strong>Switch Timeout Settings</strong>
                <ul>
                    <li>Insufficient RADIUS timeout values</li>
                    <li>EAP timeout settings too short</li>
                </ul>
            </li>
        `;
        
        diagnosticSteps = `
            <li><strong>Check Current Timeout Settings</strong>
                <pre>show radius statistics
show dot1x all</pre>
                <p>Look for timeout and retransmit statistics.</p>
            </li>
            <li><strong>Measure RADIUS Response Time</strong>
                <pre>debug radius authentication</pre>
                <p>Observe the time between RADIUS requests and responses.</p>
            </li>
            <li><strong>Check Network Latency</strong>
                <pre>ping [radius-server] timeout 1 size 1500</pre>
                <p>Measure network latency to the RADIUS server.</p>
            </li>
            <li><strong>Check RADIUS Server Load</strong>
                <p>Review RADIUS server performance metrics and logs for signs of overload.</p>
            </li>
        `;
        
        recommendedSolutions = `
            <li><strong>Adjust RADIUS Timeout Settings</strong>
                <pre>radius server [server-name]
 timeout 10</pre>
                <p>Increase the RADIUS timeout value to accommodate network latency.</p>
            </li>
            <li><strong>Modify EAP Timeout Settings</strong>
                <pre>interface GigabitEthernet1/0/1
 dot1x timeout tx-period 15
 dot1x timeout supp-timeout 15</pre>
                <p>Increase EAP timeout periods to allow more time for authentication.</p>
            </li>
            <li><strong>Optimize RADIUS Server</strong>
                <p>Increase RADIUS server resources, optimize database queries, and consider load balancing.</p>
            </li>
            <li><strong>Implement RADIUS Server Redundancy</strong>
                <pre>radius server BACKUP
 address ipv4 [backup-server] auth-port 1812 acct-port 1813
 key [shared-secret]
aaa group server radius RADIUS-SERVERS
 server name PRIMARY
 server name BACKUP</pre>
                <p>Configure backup RADIUS servers to improve reliability.</p>
            </li>
        `;
    } else if (issueType === 'intermittent') {
        possibleCauses = `
            <li><strong>Reauthentication Issues</strong>
                <ul>
                    <li>Failed reauthentication attempts</li>
                    <li>Aggressive reauthentication timer</li>
                    <li>EAP-TLS session resumption problems</li>
                </ul>
            </li>
            <li><strong>RADIUS Server Availability</strong>
                <ul>
                    <li>RADIUS server instability</li>
                    <li>Network connectivity issues</li>
                    <li>Load balancing problems</li>
                </ul>
            </li>
            <li><strong>Client Supplicant Issues</strong>
                <ul>
                    <li>Buggy supplicant software</li>
                    <li>Supplicant crashes or restarts</li>
                    <li>Power management affecting wireless clients</li>
                </ul>
            </li>
        `;
        
        diagnosticSteps = `
            <li><strong>Monitor Authentication Sessions</strong>
                <pre>show authentication sessions interface [interface]</pre>
                <p>Monitor sessions over time to observe disconnects.</p>
            </li>
            <li><strong>Check Reauthentication Settings</strong>
                <pre>show dot1x all
show authentication interface [interface]</pre>
                <p>Verify reauthentication timers and settings.</p>
            </li>
            <li><strong>Enable Authentication Debugging</strong>
                <pre>debug dot1x all
debug authentication all</pre>
                <p>Capture debug output during disconnects.</p>
            </li>
            <li><strong>Monitor RADIUS Server Health</strong>
                <pre>show aaa servers</pre>
                <p>Check for server status changes and response times.</p>
            </li>
        `;
        
        recommendedSolutions = `
            <li><strong>Adjust Reauthentication Timer</strong>
                <pre>interface GigabitEthernet1/0/1
 authentication timer reauthenticate 36000</pre>
                <p>Increase the reauthentication interval to reduce frequency.</p>
            </li>
            <li><strong>Configure Server Deadtime</strong>
                <pre>aaa group server radius RADIUS-SERVERS
 deadtime 15</pre>
                <p>Set an appropriate deadtime to prevent repeated attempts to unavailable servers.</p>
            </li>
            <li><strong>Implement Client Workarounds</strong>
                <p>For known client issues, update supplicant software or apply vendor-recommended settings.</p>
            </li>
            <li><strong>Configure Critical Authentication</strong>
                <pre>interface GigabitEthernet1/0/1
 authentication event server dead action authorize vlan [critical-vlan]
 authentication event server alive action reinitialize</pre>
                <p>Allow continued access during RADIUS server outages.</p>
            </li>
        `;
    } else if (issueType === 'radius-server') {
        possibleCauses = `
            <li><strong>RADIUS Server Connectivity</strong>
                <ul>
                    <li>Network path issues between switch and RADIUS server</li>
                    <li>Firewall blocking RADIUS traffic</li>
                    <li>RADIUS server listening on wrong ports</li>
                </ul>
            </li>
            <li><strong>RADIUS Server Configuration</strong>
                <ul>
                    <li>Incorrect shared secret</li>
                    <li>RADIUS client (switch) not defined on server</li>
                    <li>RADIUS service not running</li>
                </ul>
            </li>
            <li><strong>Switch Configuration</strong>
                <ul>
                    <li>Incorrect RADIUS server IP or port</li>
                    <li>Incorrect shared secret on switch</li>
                    <li>Source interface issues</li>
                </ul>
            </li>
        `;
        
        diagnosticSteps = `
            <li><strong>Check RADIUS Server Status</strong>
                <pre>show aaa servers</pre>
                <p>Verify the current status of configured RADIUS servers.</p>
            </li>
            <li><strong>Test Network Connectivity</strong>
                <pre>ping [radius-server]
telnet [radius-server] 1812</pre>
                <p>Test basic connectivity and port accessibility.</p>
            </li>
            <li><strong>Verify RADIUS Configuration</strong>
                <pre>show running-config | include radius</pre>
                <p>Check current RADIUS configuration.</p>
            </li>
            <li><strong>Test RADIUS Authentication</strong>
                <pre>test aaa group radius [username] [password] new-code</pre>
                <p>Test RADIUS authentication directly from the switch.</p>
            </li>
        `;
        
        recommendedSolutions = `
            <li><strong>Correct RADIUS Server IP and Port</strong>
                <pre>radius server PRIMARY
 address ipv4 [correct-ip] auth-port 1812 acct-port 1813</pre>
                <p>Ensure the correct IP address and ports are configured.</p>
            </li>
            <li><strong>Verify Shared Secret</strong>
                <pre>radius server PRIMARY
 key [shared-secret]</pre>
                <p>Confirm the shared secret matches between switch and RADIUS server.</p>
            </li>
            <li><strong>Configure Source Interface</strong>
                <pre>ip radius source-interface [interface]</pre>
                <p>Specify a stable source interface for RADIUS packets.</p>
            </li>
            <li><strong>Implement RADIUS Server Redundancy</strong>
                <pre>radius server BACKUP
 address ipv4 [backup-server-ip] auth-port 1812 acct-port 1813
 key [shared-secret]
aaa group server radius RADIUS-SERVERS
 server name PRIMARY
 server name BACKUP</pre>
                <p>Configure backup RADIUS servers for redundancy.</p>
            </li>
        `;
    } else {
        // General troubleshooting
        possibleCauses = `
            <li><strong>Authentication Configuration Issues</strong>
                <ul>
                    <li>Incorrect 802.1X configuration</li>
                    <li>EAP method mismatch</li>
                    <li>RADIUS server configuration problems</li>
                </ul>
            </li>
            <li><strong>Client/Supplicant Issues</strong>
                <ul>
                    <li>Unsupported or misconfigured supplicant</li>
                    <li>Certificate issues</li>
                    <li>Credential problems</li>
                </ul>
            </li>
            <li><strong>Network Infrastructure Problems</strong>
                <ul>
                    <li>VLAN configuration issues</li>
                    <li>Switch port configuration errors</li>
                    <li>Network connectivity problems</li>
                </ul>
            </li>
        `;
        
        diagnosticSteps = `
            <li><strong>Check Authentication Status</strong>
                <pre>show authentication sessions
show dot1x all</pre>
                <p>Verify the current authentication state of ports.</p>
            </li>
            <li><strong>Verify RADIUS Communication</strong>
                <pre>show aaa servers
debug radius authentication</pre>
                <p>Check RADIUS server connectivity and authentication responses.</p>
            </li>
            <li><strong>Examine Switch Configuration</strong>
                <pre>show running-config interface [interface]
show running-config | include aaa|radius|dot1x</pre>
                <p>Review the current configuration related to 802.1X.</p>
            </li>
            <li><strong>Check Client State</strong>
                <p>Verify the supplicant configuration and logs on the client device.</p>
            </li>
        `;
        
        recommendedSolutions = `
            <li><strong>Enable Monitor Mode</strong>
                <pre>interface GigabitEthernet1/0/1
 authentication open</pre>
                <p>Allow traffic while monitoring authentication for troubleshooting.</p>
            </li>
            <li><strong>Implement MAC Authentication Bypass</strong>
                <pre>interface GigabitEthernet1/0/1
 authentication order dot1x mab
 authentication priority dot1x mab
 mab</pre>
                <p>Configure MAB as a fallback for devices that don't support 802.1X.</p>
            </li>
            <li><strong>Configure Guest VLAN</strong>
                <pre>interface GigabitEthernet1/0/1
 authentication event fail action authorize vlan [guest-vlan]</pre>
                <p>Provide limited access to devices that fail authentication.</p>
            </li>
            <li><strong>Verify Basic Network Connectivity</strong>
                <p>Ensure physical connectivity, switch port status, and basic network functionality.</p>
            </li>
        `;
    }
    
    // Create HTML response
    const html = `
        <h3>Troubleshooting Assistance</h3>
        
        <h4>Problem Analysis</h4>
        <p>Based on your description, you're experiencing issues with 802.1X authentication. Here are some potential causes and solutions:</p>
        
        <h4>Possible Causes</h4>
        <ol>
            ${possibleCauses}
        </ol>
        
        <h4>Diagnostic Steps</h4>
        <ol>
            ${diagnosticSteps}
        </ol>
        
        <h4>Recommended Solutions</h4>
        <ol>
            ${recommendedSolutions}
        </ol>
        
        <h4>Long-Term Recommendations</h4>
        <ul>
            <li>Implement a phased 802.1X deployment strategy starting with monitor mode</li>
            <li>Create detailed documentation for both user and IT staff</li>
            <li>Consider using a NAC solution for easier management and troubleshooting</li>
            <li>Set up regular auditing of authentication logs to identify recurring issues</li>
        </ul>
    `;
    
    return html;
}

function simulateConfigConversion(config) {
    // Try to determine source vendor/platform
    let sourceVendor = 'unknown';
    let configType = 'unknown';
    
    if (config.includes('aaa new-model') && config.includes('dot1x')) {
        sourceVendor = 'cisco';
        configType = '802.1x';
    } else if (config.includes('set access radius-server') && config.includes('dot1x authenticator')) {
        sourceVendor = 'juniper';
        configType = '802.1x';
    } else if (config.includes('radius-server host') && config.includes('aaa authentication port-access')) {
        sourceVendor = 'aruba';
        configType = '802.1x';
    }
    
    // Create conversion outputs
    let arubaConfig = '';
    let juniperConfig = '';
    let fortinetConfig = '';
    
    if (sourceVendor === 'cisco' && configType === '802.1x') {
        // Convert Cisco config to Aruba AOS-CX
        arubaConfig = `! Aruba AOS-CX Equivalent
! Converted from Cisco configuration

radius-server host 10.1.1.100 key Str0ngR@diusK3y!987
radius-server host 10.1.1.101 key Str0ngB@ckupK3y!456
radius-server timeout 10
radius-server retransmit 2
radius-server deadtime 15

aaa authentication port-access dot1x authenticator
aaa authentication port-access dot1x authenticator eap-radius
aaa authentication port-access mac-auth
aaa accounting dot1x start-stop radius

vlan 10 name "DATA_VLAN"
vlan 20 name "VOICE_VLAN"
vlan 30 name "GUEST_VLAN"
vlan 999 name "CRITICAL_VLAN"

interface 1/1/1
    no shutdown
    vlan access 10
    vlan voice 20
    aaa authentication port-access dot1x authenticator
    aaa authentication port-access mac-auth
    aaa port-access dot1x authenticator
    aaa port-access mac-auth
    aaa port-access auth-fail-vlan 30
    aaa port-access server-fail-vlan 999
    aaa port-access controlled-port authorized-when-unauthenticated
    spanning-tree port-type admin-edge`;
        
        // Convert Cisco config to Juniper EX
        juniperConfig = `# Juniper EX-Series Equivalent
# Converted from Cisco configuration

set access radius-server 10.1.1.100 secret Str0ngR@diusK3y!987
set access radius-server 10.1.1.100 timeout 10
set access radius-server 10.1.1.100 retry 2
set access radius-server 10.1.1.100 source-address <SWITCH_IP>
set access radius-server 10.1.1.101 secret Str0ngB@ckupK3y!456
set access radius-server 10.1.1.101 timeout 10
set access radius-server 10.1.1.101 retry 2
set access radius-server 10.1.1.101 source-address <SWITCH_IP>

set access profile DOT1X-PROFILE authentication-order radius
set access profile DOT1X-PROFILE radius authentication-server 10.1.1.100
set access profile DOT1X-PROFILE radius authentication-server 10.1.1.101
set access profile DOT1X-PROFILE radius accounting-server 10.1.1.100
set access profile DOT1X-PROFILE radius accounting-server 10.1.1.101
set access profile DOT1X-PROFILE radius options change-of-authorization

set vlans DATA_VLAN vlan-id 10
set vlans VOICE_VLAN vlan-id 20
set vlans GUEST_VLAN vlan-id 30
set vlans CRITICAL_VLAN vlan-id 999

set protocols dot1x authenticator authentication-profile-name DOT1X-PROFILE
set protocols dot1x authenticator interface ge-0/0/1.0
set protocols dot1x authenticator interface ge-0/0/1.0 mac-radius
set protocols dot1x authenticator interface ge-0/0/1.0 supplicant multiple
set protocols dot1x authenticator interface ge-0/0/1.0 guest-vlan GUEST_VLAN
set protocols dot1x authenticator interface ge-0/0/1.0 server-fail vlan-name CRITICAL_VLAN`;
        
        // Convert Cisco config to FortiSwitch
        fortinetConfig = `# FortiSwitch Equivalent
# Converted from Cisco configuration

config system interface
    edit "port1"
        set allowaccess ping
        set dhcp-snooping enable
        set dot1x enable
        set security-mode 802.1X
        set vlan-count 3
    next
end

config user radius
    edit "PRIMARY"
        set server "10.1.1.100"
        set secret Str0ngR@diusK3y!987
        set timeout 10
        set nas-ip <SWITCH_IP>
    next
    edit "BACKUP"
        set server "10.1.1.101"
        set secret Str0ngB@ckupK3y!456
        set timeout 10
        set nas-ip <SWITCH_IP>
    next
end

config user group
    edit "RADIUS-SERVERS"
        set member "PRIMARY" "BACKUP"
    next
end

config system interface
    edit "port1"
        set dot1x-auth enable
        set dot1x-mab enable
        set access-vlan 10
        set voice-vlan 20
        set guest-vlan 30
        set critical-vlan 999
        set dot1x-auth-timeout-period 7200
        set security-mode 802.1X-mac-based
    next
end`;
    } else if (sourceVendor === 'juniper' && configType === '802.1x') {
        // Convert Juniper to Cisco
        arubaConfig = `! Aruba AOS-CX Equivalent
! Converted from Juniper configuration

radius-server host 10.1.1.100 key Str0ngR@diusK3y!987
radius-server host 10.1.1.101 key Str0ngB@ckupK3y!456
radius-server timeout 10
radius-server retransmit 2
radius-server deadtime 15

aaa authentication port-access dot1x authenticator
aaa authentication port-access dot1x authenticator eap-radius
aaa authentication port-access mac-auth
aaa accounting dot1x start-stop radius

vlan 10 name "DATA_VLAN"
vlan 20 name "VOICE_VLAN"
vlan 30 name "GUEST_VLAN"
vlan 999 name "CRITICAL_VLAN"

interface 1/1/1
    no shutdown
    vlan access 10
    vlan voice 20
    aaa authentication port-access dot1x authenticator
    aaa authentication port-access mac-auth
    aaa port-access dot1x authenticator
    aaa port-access mac-auth
    aaa port-access auth-fail-vlan 30
    aaa port-access server-fail-vlan 999
    spanning-tree port-type admin-edge`;
    } else {
        // Generic note about unsupported conversion
        arubaConfig = `! Unable to automatically convert the provided configuration to Aruba format.
! The source configuration format is not recognized or not supported for conversion.
! Please refer to Aruba documentation for manual configuration guidance.`;
        
        juniperConfig = `# Unable to automatically convert the provided configuration to Juniper format.
# The source configuration format is not recognized or not supported for conversion.
# Please refer to Juniper documentation for manual configuration guidance.`;
        
        fortinetConfig = `# Unable to automatically convert the provided configuration to FortiSwitch format.
# The source configuration format is not recognized or not supported for conversion.
# Please refer to FortiSwitch documentation for manual configuration guidance.`;
    }
    
    // Create HTML response
    const html = `
        <h3>Configuration Conversion</h3>
        
        <p>I've converted the provided ${sourceVendor !== 'unknown' ? sourceVendor.charAt(0).toUpperCase() + sourceVendor.slice(1) : ''} configuration to equivalent configurations for other vendors:</p>
        
        <h4>Aruba AOS-CX Equivalent</h4>
        <pre>${arubaConfig}</pre>
        
        <h4>Juniper EX-Series Equivalent</h4>
        <pre>${juniperConfig}</pre>
        
        <h4>FortiSwitch Equivalent</h4>
        <pre>${fortinetConfig}</pre>
        
        <p><strong>Note:</strong> These conversions are approximate equivalents and may require adjustments for your specific environment. Always review and test configurations before deploying in production.</p>
    `;
    
    return html;
}

// Export functions for use in other modules
export {
    executeAITask,
    validateApiKey
};
